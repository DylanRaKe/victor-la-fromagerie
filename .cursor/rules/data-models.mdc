---
description: 
globs: 
alwaysApply: false
---
# Mod√®les de Donn√©es - Victor la Fromagerie

## üìä Types TypeScript Principaux

### Fromage
```typescript
interface Fromage {
  id: string
  nom: string
  description: string
  prix: number
  poids: number
  type: TypeFromage
  lait: TypeLait
  image: string
  disponible: boolean
  stock?: number
}

enum TypeFromage {
  PATE_MOLLE = 'pate_molle',
  PATE_DURE = 'pate_dure',
  CHEVRE = 'chevre',
  BLEU = 'bleu'
}

enum TypeLait {
  VACHE = 'vache',
  CHEVRE = 'chevre',
  BREBIS = 'brebis'
}
```

### Commande
```typescript
interface Commande {
  id: string
  items: ItemCommande[]
  client: InfoClient
  creneauRetrait: CreneauRetrait
  statut: StatutCommande
  dateCreation: Date
  total: number
}

interface ItemCommande {
  fromage: Fromage
  quantite: number
  prixUnitaire: number
}

interface InfoClient {
  nom: string
  prenom: string
  email: string
  telephone?: string
}

interface CreneauRetrait {
  date: Date
  heureDebut: string
  heureFin: string
}

enum StatutCommande {
  EN_ATTENTE = 'en_attente',
  PREPAREE = 'preparee',
  RETIREE = 'retiree',
  ANNULEE = 'annulee'
}
```

## üóÇÔ∏è Organisation des Types
```
types/
‚îú‚îÄ‚îÄ fromage.ts           # Types li√©s aux fromages
‚îú‚îÄ‚îÄ commande.ts          # Types de commandes
‚îú‚îÄ‚îÄ client.ts            # Types client
‚îú‚îÄ‚îÄ admin.ts             # Types backoffice
‚îî‚îÄ‚îÄ index.ts             # Exports centralis√©s
```

## üíæ Stockage des Donn√©es
- **D√©veloppement** : JSON local ou localStorage
- **Production** : Base de donn√©es simple (SQLite/PostgreSQL)
- **Images** : Dossier `public/images/fromages/`

## üîÑ √âtat Global (Zustand)
```typescript
interface StoreState {
  panier: ItemCommande[]
  ajouterAuPanier: (fromage: Fromage, quantite: number) => void
  retirerDuPanier: (fromageId: string) => void
  viderPanier: () => void
  calculerTotal: () => number
}
```

## ‚úÖ Conventions
- Utiliser des **enums** pour les valeurs fixes
- **Interfaces** plut√¥t que types pour les objets
- **Validation Zod** pour les donn√©es utilisateur
- **IDs uniques** (UUID ou nanoid)
- **Dates ISO** pour la s√©rialisation
